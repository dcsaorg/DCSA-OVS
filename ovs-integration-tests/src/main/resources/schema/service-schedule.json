{
"type": "array",
"items": {
  "required": [
    "carrierServiceName"
  ],
  "type": "object",
  "properties": {
    "carrierServiceName": {
      "maxLength": 50,
      "type": "string",
      "description": "The name of the service \n"
    },
    "carrierServiceCode": {
      "maxLength": 5,
      "type": "string",
      "description": "The Carrier specific code of the service for which the schedule details are published.\n"
    },
    "universalServiceReference": {
      "maxLength": 8,
      "pattern": "SR\\d{5}[A-Z]",
      "type": "string",
      "description": "A global unique service reference, as per DCSA standard, agreed by VSA partners for the service. The service reference must match the regular expression pattern: `SR\\d{5}[A-Z]`. The letters `SR` followed by `5 digits`, followed by a checksum-character as a capital letter from `A to Z`.\n"
    },
    "vesselSchedules": {
      "type": "array",
      "items": {
        "required": [
          "isDummyVessel"
        ],
        "type": "object",
        "properties": {
          "vesselOperatorSMDGLinerCode": {
            "maxLength": 10,
            "type": "string",
            "description": "The carrier who is in charge of the vessel operation based on the SMDG code\n"
          },
          "vesselIMONumber": {
            "maxLength": 7,
            "type": "string",
            "description": "The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd&apos;s register code, which does not change during the lifetime of the vessel\n"
          },
          "vesselName": {
            "maxLength": 35,
            "type": "string",
            "description": "The name of the Vessel given by the Vessel Operator and registered with IMO.\n"
          },
          "vesselCallSign": {
            "maxLength": 10,
            "type": "string",
            "description": "A unique alphanumeric identity that belongs to the vessel and is assigned by the International Telecommunication Union (ITU). It consists of a threeletter alphanumeric prefix that indicates nationality, followed by one to four characters to identify the individual vessel. For instance, vessels registered under Denmark are assigned the prefix ranges 5PA-5QZ, OUAOZZ, and XPA-XPZ. The Call Sign changes whenever a vessel changes its flag.\n"
          },
          "isDummyVessel": {
            "type": "boolean",
            "description": "Is this a dummy vessel. In case no vessel has been asigned yet - this property can be set to `true` indicating that the vesselIMONumber does not exist.\n"
          },
          "transportCalls": {
            "type": "array",
            "items": {
              "required": [
                "carrierImportVoyageNumber",
                "transportCallReference"
              ],
              "type": "object",
              "description": "A transportCall in the schedule. A transportCall can be either just a Port or further specified as a terminalCall.\n\nThe order of the list is the sequence of the list\n",
              "properties": {
                "portVisitReference": {
                  "maxLength": 50,
                  "type": "string",
                  "description": "The unique reference that can be used to link different `transportCallReferences` to the same port visit. The reference is provided by the port to uniquely identify a port call\n"
                },
                "transportCallReference": {
                  "maxLength": 100,
                  "type": "string",
                  "description": "A carrier definied reference to a TransportCall.\n\nIn the case the Means of Transport is a `Vessel` and the facility is a `Port`/`Terminal` - this reference should be considered a **Terminal Call Reference**\n"
                },
                "carrierImportVoyageNumber": {
                  "maxLength": 50,
                  "type": "string",
                  "description": "The identifier of an import voyage. The vessel operator-specific identifier of the import Voyage.\n"
                },
                "carrierExportVoyageNumber": {
                  "maxLength": 50,
                  "type": "string",
                  "description": "The identifier of an export voyage. The vessel operator-specific identifier of the export Voyage.\n"
                },
                "universalImportVoyageReference": {
                  "pattern": "\\d{2}[0-9A-Z]{2}[NEWS]",
                  "type": "string",
                  "description": "A global unique voyage reference for the import Voyage, as per DCSA standard, agreed by VSA partners for the voyage. The voyage reference must match the regular expression pattern: `\\d{2}[0-9A-Z]{2}[NEWS]`\n- `2 digits` for the year\n- `2 alphanumeric characters` for the sequence number of the voyage\n- `1 character` for the direction/haul (`N`orth, `E`ast, `W`est or `S`outh).\n"
                },
                "universalExportVoyageReference": {
                  "pattern": "\\d{2}[0-9A-Z]{2}[NEWS]",
                  "type": "string",
                  "description": "A global unique voyage reference for the export Voyage, as per DCSA standard, agreed by VSA partners for the voyage. The voyage reference must match the regular expression pattern: `\\d{2}[0-9A-Z]{2}[NEWS]`\n- `2 digits` for the year\n- `2 alphanumeric characters` for the sequence number of the voyage\n- `1 character` for the direction/haul (`N`orth, `E`ast, `W`est or `S`outh).\n"
                },
                "location": {
                  "type": "object",
                  "description": "General purpose object to capture location-related data, the location can be specified in any of the following ways: `UN Location Code`, a `Facility` or an `Address`.\n",
                  "anyOf": [
                    {
                      "required": [
                        "UNLocationCode"
                      ],
                      "type": "object",
                      "description": "An interface used to express a location using a `Un Location Code`\n",
                      "properties": {
                        "locationName": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the location."
                        },
                        "UNLocationCode": {
                          "maxLength": 5,
                          "type": "string",
                          "description": "The UN Location code specifying where the place is located."
                        }
                      }
                    },
                    {
                      "required": [
                        "UNLocationCode",
                        "facilitySMDGCode"
                      ],
                      "type": "object",
                      "description": "An interface used to express a location using a `Facility` by the `SMDG` code list. The `facilitySMDGCode` does not contain the `UNLocationCode` - this should be provided in the `UnLocationCode` attribute.\n",
                      "properties": {
                        "locationName": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the location."
                        },
                        "UNLocationCode": {
                          "maxLength": 5,
                          "type": "string",
                          "description": "The UN Location code specifying where the place is located."
                        },
                        "facilitySMDGCode": {
                          "maxLength": 6,
                          "type": "string",
                          "description": "The code used for identifying the specific facility. This code does <b>not</b> include the UN Location Code.\n"
                        }
                      }
                    },
                    {
                      "required": [
                        "address"
                      ],
                      "type": "object",
                      "description": "An interface used to express a location using an `Address` object\n",
                      "properties": {
                        "locationName": {
                          "maxLength": 100,
                          "type": "string",
                          "description": "The name of the location."
                        },
                        "address": {
                          "description": "Address related information",
                          "type": "object",
                          "properties": {
                            "name": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "Name of the address"
                            },
                            "street": {
                              "maxLength": 100,
                              "type": "string",
                              "description": "The name of the street of the party’s address."
                            },
                            "streetNumber": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The number of the street of the party’s address."
                            },
                            "floor": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The floor of the party’s street number."
                            },
                            "postCode": {
                              "maxLength": 50,
                              "type": "string",
                              "description": "The post code of the party’s address."
                            },
                            "city": {
                              "maxLength": 65,
                              "type": "string",
                              "description": "The city name of the party’s address."
                            },
                            "stateRegion": {
                              "maxLength": 65,
                              "type": "string",
                              "description": "The state/region of the party’s address."
                            },
                            "country": {
                              "maxLength": 75,
                              "type": "string",
                              "description": "The country of the party’s address."
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "statusCode": {
                  "type": "string",
                  "description": "The set of codes in `Status Code` are ONLY meant to communicate any change / exception to the published schedule. This is not required in case of normal schedule. Possible values are:\n\n- OMIT (Omit)\n- BLNK (Blank)\n- ADHO (Ad Hoc)\n- PHOT (Phase Out)\n- PHIN (Phase In)\n- SLID (Sliding)\n- ROTC (Rotation Change)\n\nMore details can be found on [GitHub](https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/portcallstatuscode.csv)\n",
                  "enum": [
                    "OMIN",
                    "PHIN",
                    "PHOT",
                    "ADHO",
                    "BLNK",
                    "SLID",
                    "ROTC"
                  ]
                },
                "timestamps": {
                  "type": "array",
                  "items": {
                    "required": [
                      "eventClassifierCode",
                      "eventDateTime",
                      "eventTypeCode"
                    ],
                    "type": "object",
                    "description": "A timestamp for a port\n",
                    "properties": {
                      "eventTypeCode": {
                        "type": "string",
                        "description": "Identifier for type of Transport event\n- ARRI (Arrived)\n- DEPA (Departed)\n\nMore details can be found on <a href=\"https://github.com/dcsaorg/DCSA-Information-Model/blob/master/datamodel/referencedata.d/transporteventtypecodes.csv\">GitHub</a>\n",
                        "enum": [
                          "ARRI",
                          "DEPA"
                        ]
                      },
                      "eventClassifierCode": {
                        "type": "string",
                        "description": "Code for the event classifier. Values can vary depending on eventType\n",
                        "enum": [
                          "ACT",
                          "EST",
                          "PLN"
                        ]
                      },
                      "eventDateTime": {
                        "type": "string",
                        "description": "Time in the timstamp\n",
                        "format": "date-time"
                      },
                      "delayReasonCode": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "Reason code for the delay. See SMDG [Code list DELAY](https://smdg.org/documents/smdg-code-lists/delay-reason-and-port-call-activity/) for a list of valid codes to be used for this attribute.\n"
                      },
                      "changeRemark": {
                        "maxLength": 250,
                        "type": "string",
                        "description": "Free text information provided by the vessel operator regarding the reasons for the change in schedule and/or plans to mitigate schedule slippage."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
},
"$schema": "http://json-schema.org/draft-04/schema#"
}

